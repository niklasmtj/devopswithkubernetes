name: Release project application server

on:
  push:
    paths:
      - "project/**"

env:
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-west3
  BACKEND_IMAGE: devops-project-backend
  FRONTEND_IMAGE: devops-project-frontend

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # Set up Frontend Image

      - name: Create image name and tag
        run: echo "FRONTEND_IMAGE_WITH_TAG=gcr.io/${{ secrets.GKE_PROJECT }}/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build container image
        run: docker build --tag "${{env.FRONTEND_IMAGE_WITH_TAG}}" .
      - name: Publish to gcr
        run: docker push "${{env.FRONTEND_IMAGE_WITH_TAG}}"

      # Set up Backend Image

      - name: Create image name and tag
        run: echo "BACKEND_IMAGE_WITH_TAG=gcr.io/${{ secrets.GKE_PROJECT }}/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build container image
        run: docker build --tag "${{env.BACKEND_IMAGE_WITH_TAG}}" .
      - name: Publish to gcr
        run: docker push "${{env.BACKEND_IMAGE_WITH_TAG}}"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Deploy
        run: |-
          kubectl create namespace project || true
          kubectl config set-context --current --namespace=project
          ./kustomize edit set image PROJECT/FRONTEND_IMAGE=${{env.FRONTEND_IMAGE_WITH_TAG}}
          ./kustomize edit set image PROJECT/BACKEND_IMAGE=${{env.BACKEND_IMAGE_WITH_TAG}}
          kubectl apply -k .
          kubectl rollout status deployment $FRONTEND_IMAGE
